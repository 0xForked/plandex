# Build stage
FROM --platform=linux/amd64 debian:bullseye-slim as builder

RUN apt-get update && apt-get install -y --no-install-recommends \
  golang-go \
  && rm -rf /var/lib/apt/lists/*

WORKDIR /app

COPY ./shared/go.mod ./shared/go.sum ./shared/
RUN cd shared && go mod download

COPY ./server/go.mod ./server/go.sum ./server/
RUN cd server && go mod download

COPY ./server ./server
COPY ./shared ./shared

WORKDIR /app/server
ENV GOOS=linux
ENV GOARCH=amd64
RUN go build -o plandex-server .

# Final stage
FROM --platform=linux/amd64 debian:bullseye-slim  

RUN apt-get update && \
  apt-get install -y git ca-certificates curl && \
  apt-get clean && \
  rm -rf /var/lib/apt/lists/*

WORKDIR /app/server

COPY --from=builder /app/server/plandex-server .
COPY --from=builder /app/server/migrations ./migrations

ENV PORT=8080
EXPOSE 8080

CMD ["./plandex-server"]

